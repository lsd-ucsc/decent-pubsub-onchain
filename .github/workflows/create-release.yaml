name: Create release

on:
  push:
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ main ]

jobs:
  create_release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04 ]

        python-version: [ 3.11 ]
        node-version: [ 18.16.0 ]

        ganache-version: [ 7.9.1 ]

        solc-version: [ v0.8.21 ]

    env:
      SOLC_BIN: ${{ github.workspace }}/build/solc-static-linux
      SOLC_FLAGS: >-
        --optimize --optimize-runs 200
        --revert-strings strip
        --via-ir
        --overwrite
        --base-path ${{ github.workspace }}
        --output-dir ${{ github.workspace }}/build/
      SOLC_VER_CMD: >-
        ${{ github.workspace }}/build/solc-static-linux
        --version | tail -n 1 | sed -e "s/^Version: //g"
      RELE_NOTE: ${{ github.workspace }}/build/release_note.md

    name: A job to create a release
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Installing Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Installing Python packages
      run: |
        python3 -m pip install --requirement ${{ github.workspace }}/utils/gas_cost_eval_requirements.txt

    - name: Installing Node ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Installing NPM packages
      run: |
        npm install -g ganache@${{ matrix.ganache-version }}

    - name: Installing Solc compiler
      run: |
        mkdir -p ${{ github.workspace }}/build/
        curl -fsSL -o ${SOLC_BIN} \
          https://github.com/ethereum/solidity/releases/download/${{ matrix.solc-version }}/solc-static-linux
        chmod +x ${SOLC_BIN}

    - name: Compiling contracts for PubSub/EventManager.sol
      run: |
        ${SOLC_BIN} ${SOLC_FLAGS} --bin ${{ github.workspace }}/PubSub/EventManager.sol
        ${SOLC_BIN} ${SOLC_FLAGS} --abi ${{ github.workspace }}/PubSub/EventManager.sol

    - name: Compiling contracts for PubSub/PubSubService.sol
      run: |
        ${SOLC_BIN} ${SOLC_FLAGS} --bin ${{ github.workspace }}/PubSub/PubSubService.sol
        ${SOLC_BIN} ${SOLC_FLAGS} --abi ${{ github.workspace }}/PubSub/PubSubService.sol

    - name: Compiling contracts for tests/HelloWorldSubscriber.sol
      run: |
        ${SOLC_BIN} ${SOLC_FLAGS} --bin ${{ github.workspace }}/tests/HelloWorldSubscriber.sol
        ${SOLC_BIN} ${SOLC_FLAGS} --abi ${{ github.workspace }}/tests/HelloWorldSubscriber.sol

    - name: Compiling contracts for tests/HelloWorldPublisher.sol
      run: |
        ${SOLC_BIN} ${SOLC_FLAGS} --bin ${{ github.workspace }}/tests/HelloWorldPublisher.sol
        ${SOLC_BIN} ${SOLC_FLAGS} --abi ${{ github.workspace }}/tests/HelloWorldPublisher.sol

    - name: Calculating checksums of the binary
      working-directory: ${{ github.workspace }}/build
      run: |
        sha256sum solc-static-linux        >> checksums.txt
        sha256sum EventManager.bin         >> checksums.txt
        sha256sum EventManager.abi         >> checksums.txt
        sha256sum PubSubService.bin        >> checksums.txt
        sha256sum PubSubService.abi        >> checksums.txt
        sha256sum HelloWorldPublisher.bin  >> checksums.txt
        sha256sum HelloWorldPublisher.abi  >> checksums.txt
        sha256sum HelloWorldSubscriber.bin >> checksums.txt
        sha256sum HelloWorldSubscriber.abi >> checksums.txt

    - name: Prepare binaries for gas cost evaluation
      working-directory: ${{ github.workspace }}/build
      run: |
        mkdir -p PubSub
        cp EventManager.bin  PubSub/EventManager.bin
        cp EventManager.abi  PubSub/EventManager.abi
        cp PubSubService.bin PubSub/PubSubService.bin
        cp PubSubService.abi PubSub/PubSubService.abi
        mkdir -p tests
        cp HelloWorldPublisher.bin  tests/HelloWorldPublisher.bin
        cp HelloWorldPublisher.abi  tests/HelloWorldPublisher.abi
        cp HelloWorldSubscriber.bin tests/HelloWorldSubscriber.bin
        cp HelloWorldSubscriber.abi tests/HelloWorldSubscriber.abi

    - name: Run publish gas cost evaluation
      run: |
        python3 ${{ github.workspace }}/tests/GasCostEvalMultiSubs.py

    - name: Run subscribe gas cost evaluation
      run: |
        python3 ${{ github.workspace }}/tests/GasCostEvalMultiPubs.py

    - name: Run deployment gas cost evaluation
      run: |
        python3 ${{ github.workspace }}/tests/GasCostEvalDeploy.py

    - name: Plot gas cost evaluation result figures
      run: |
        python3 ${{ github.workspace }}/tests/GasCostEvalPlot.py

    - name: Generate release note
      working-directory: ${{ github.workspace }}/build
      run: |
        echo "# Release note"                   >> ${RELE_NOTE}
        echo "" >> ${RELE_NOTE}
        echo "## Contracts"                     >> ${RELE_NOTE}
        echo "- PubSub/EventManager.sol"        >> ${RELE_NOTE}
        echo "- PubSub/PubSubService.sol"       >> ${RELE_NOTE}
        echo "- tests/HelloWorldPublisher.sol"  >> ${RELE_NOTE}
        echo "- tests/HelloWorldSubscriber.sol" >> ${RELE_NOTE}
        echo "" >> ${RELE_NOTE}
        echo "## Build configurations"                          >> ${RELE_NOTE}
        echo "- OS: \`${{ matrix.os }}\`"                       >> ${RELE_NOTE}
        echo "- Solc version: \`$(bash -c "${SOLC_VER_CMD}")\`" >> ${RELE_NOTE}
        echo "- Compiler Flags: \`${SOLC_FLAGS}\`"              >> ${RELE_NOTE}
        echo "" >> ${RELE_NOTE}
        echo "## Checksums"       >> ${RELE_NOTE}
        echo "\`\`\`"             >> ${RELE_NOTE}
        cat checksums.txt         >> ${RELE_NOTE}
        echo "\`\`\`"             >> ${RELE_NOTE}
        echo "" >> ${RELE_NOTE}
        echo "## Gas Cost Evaluations" >> ${RELE_NOTE}
        echo "### Gas Cost of Publishing Events"         >> ${RELE_NOTE}
        echo ""                                          >> ${RELE_NOTE}
        echo '!'"[publish_gas_cost](/../../blob/assets-gas-eval/assets/${{ github.ref_name }}-publish_gas_cost.svg)"     >> ${RELE_NOTE}
        echo ""                                          >> ${RELE_NOTE}
        echo "### Gas Cost of Publisher Registeration"   >> ${RELE_NOTE}
        echo ""                                          >> ${RELE_NOTE}
        echo '!'"[register_gas_cost](/../../blob/assets-gas-eval/assets/${{ github.ref_name }}-register_gas_cost.svg)" >> ${RELE_NOTE}
        echo ""                                          >> ${RELE_NOTE}
        echo "### Gas Cost of Subscribing to Publishers" >> ${RELE_NOTE}
        echo ""                                          >> ${RELE_NOTE}
        echo '!'"[subscribe_gas_cost](/../../blob/assets-gas-eval/assets/${{ github.ref_name }}-subscribe_gas_cost.svg)" >> ${RELE_NOTE}
        echo ""                                          >> ${RELE_NOTE}
        echo "### Gas Cost of Contract Deployment"       >> ${RELE_NOTE}
        echo "\`\`\`json"                                >> ${RELE_NOTE}
        cat deploy_gas_cost.json                         >> ${RELE_NOTE}
        echo ""                                          >> ${RELE_NOTE}
        echo "\`\`\`"                                    >> ${RELE_NOTE}
        echo ""                                          >> ${RELE_NOTE}
        echo "### Gas Cost Summary"                      >> ${RELE_NOTE}
        echo ""                                          >> ${RELE_NOTE}
        echo '!'"[gas_cost](/../../blob/assets-gas-eval/assets/${{ github.ref_name }}-gas_cost.svg)" >> ${RELE_NOTE}
        echo ""                                          >> ${RELE_NOTE}
        echo "" >> ${RELE_NOTE}

    - name: Echo release note
      run: |
        cat ${{ github.workspace }}/build/release_note.md

    - name: Release for non-tagged commit
      uses: actions/upload-artifact@v3
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      with:
        name: non_tagged_release
        path: |
          ${{ github.workspace }}/build/release_note.md
          ${{ github.workspace }}/build/EventManager.bin
          ${{ github.workspace }}/build/EventManager.abi
          ${{ github.workspace }}/build/PubSubService.bin
          ${{ github.workspace }}/build/PubSubService.abi
          ${{ github.workspace }}/build/HelloWorldPublisher.bin
          ${{ github.workspace }}/build/HelloWorldPublisher.abi
          ${{ github.workspace }}/build/HelloWorldSubscriber.bin
          ${{ github.workspace }}/build/HelloWorldSubscriber.abi
          ${{ github.workspace }}/build/publish_gas_cost.svg
          ${{ github.workspace }}/build/publish_gas_cost.json
          ${{ github.workspace }}/build/subscribe_gas_cost.svg
          ${{ github.workspace }}/build/subscribe_gas_cost.json
          ${{ github.workspace }}/build/register_gas_cost.svg
          ${{ github.workspace }}/build/register_gas_cost.json
          ${{ github.workspace }}/build/deploy_gas_cost.json
          ${{ github.workspace }}/build/gas_cost.svg

    - name: Store evaluation figures to assets branch
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python3 ${{ github.workspace }}/utils/GitHubCreateFile.py \
            --branch assets-gas-eval \
            --commit-msg "Uploaded file assets/${{ github.ref_name }}-publish_gas_cost.svg" \
            --path "assets/${{ github.ref_name }}-publish_gas_cost.svg" \
            --file "${{ github.workspace }}/build/publish_gas_cost.svg"
        python3 ${{ github.workspace }}/utils/GitHubCreateFile.py \
            --branch assets-gas-eval \
            --path "assets/${{ github.ref_name }}-subscribe_gas_cost.svg" \
            --commit-msg "Uploaded file assets/${{ github.ref_name }}-subscribe_gas_cost.svg" \
            --file "${{ github.workspace }}/build/subscribe_gas_cost.svg"
        python3 ${{ github.workspace }}/utils/GitHubCreateFile.py \
            --branch assets-gas-eval \
            --path "assets/${{ github.ref_name }}-register_gas_cost.svg" \
            --commit-msg "Uploaded file assets/${{ github.ref_name }}-register_gas_cost.svg" \
            --file "${{ github.workspace }}/build/register_gas_cost.svg"
        python3 ${{ github.workspace }}/utils/GitHubCreateFile.py \
            --branch assets-gas-eval \
            --path "assets/${{ github.ref_name }}-gas_cost.svg" \
            --commit-msg "Uploaded file assets/${{ github.ref_name }}-gas_cost.svg" \
            --file "${{ github.workspace }}/build/gas_cost.svg"

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        body_path: ${{ github.workspace }}/build/release_note.md
        files: |
          ${{ github.workspace }}/build/EventManager.bin
          ${{ github.workspace }}/build/EventManager.abi
          ${{ github.workspace }}/build/PubSubService.bin
          ${{ github.workspace }}/build/PubSubService.abi
          ${{ github.workspace }}/build/HelloWorldPublisher.bin
          ${{ github.workspace }}/build/HelloWorldPublisher.abi
          ${{ github.workspace }}/build/HelloWorldSubscriber.bin
          ${{ github.workspace }}/build/HelloWorldSubscriber.abi
          ${{ github.workspace }}/build/publish_gas_cost.svg
          ${{ github.workspace }}/build/publish_gas_cost.json
          ${{ github.workspace }}/build/subscribe_gas_cost.svg
          ${{ github.workspace }}/build/subscribe_gas_cost.json
          ${{ github.workspace }}/build/register_gas_cost.svg
          ${{ github.workspace }}/build/register_gas_cost.json
          ${{ github.workspace }}/build/deploy_gas_cost.json
          ${{ github.workspace }}/build/gas_cost.svg
